apiVersion: kubedb.com/v1alpha2
kind: Postgres
metadata:
  name: demo-pg
  namespace: demo
spec:
  # version: "10.16-postgis"
  version: "13.5"
  # version: "11.11"
  # version: "10.16-debian"
  # version: "9.6.21-debian"
  # version: "timescaledb-2.1.0-pg11"
  # configSecret:
  #   name: pg-configuration
  authSecret:
    name: "pg-custom-auth"
  replicas: 3
  standbyMode: Hot
  #clientAuthMode: cert
  #sslMode: verify-full
  storageType: Durable
  #tls:
    #issuerRef:
      #apiGroup: cert-manager.io
      #name: postgres-ca-issuer
      #kind: Issuer
  # podTemplate:
  #   spec:
  #     containerSecurityContext:
  #       runAsUser: 10001
  #       privileged: false
  # leaderElection:
  #   electionTick: 10 # 10*period = 10*100ms = 1000ms
  #   heartbeatTick: 1 # 1*period = 1*100ms = 100ms
  #   period: 100ms
  #   maximumLagBeforeFailover: 33554432  # 32MB if the replica is lagging more then this replica is goigng to take base backup from master
  storage:
    storageClassName: "standard"
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 1Gi
  terminationPolicy: WipeOut
  # monitor:
  #   agent: prometheus.io/builtin

# AUTH=$(echo -ne 'postgres:7HM*R.hE$GcSGk-q' | base64 --wrap 0)

# curl \
#   --header "Content-Type: application/json" \
#   --header "Authorization: Basic $AUTH" \
#   --request POST \
#   --data  '{"key1":"value1", "key2":"value2"}' \
#   https://example.com/

 #  curl  -u postgres:'OT(J0Ux7&R*JspX7' -H "Content-Type: application/json; charset=UTF-8"   -XPOST -d "{\"transferee\":2}"  http://127.0.0.1:2379/transfer

# curl  -u postgres:'7HM*R.hE$GcSGk-q' -H "Content-Type: application/json; charset=UTF-8"   -XPOST -d "{\"transferee\":2}"  http://127.0.0.1:2379/transfer

# PostgreSQL

# 1. versions update
# 2. TLS support
# 3. added raft con
# 4. added timescaleDB distribution
# 5. not taking base backup alws
# 6. before taking basebackup make sure the master is running


# ---
# apiVersion: kubedb.com/v1alpha2
# kind: Postgres
# metadata:
#   name: demo-pg
#   namespace: demo
# spec:
#   version: "11.11"
#   replicas: 3
#   standbyMode: Hot
#   clientAuthMode: md5
#   sslMode: verify-full
#   storageType: Durable
#   tls:
#     issuerRef:
#       apiGroup: cert-manager.io
#       name: postgres-ca-issuer
#       kind: Issuer
#   leaderElection:
#     electionTick: 10 # 10*period = 10*100ms = 1000ms
#     heartbeatTick: 1 # 1*period = 1*100ms = 100ms
#     period: 100ms
#     maximumLagBeforeFailover: 33554432  # 32MB if the replica is lagging more then this replica is goigng to take base backup from master
#   storage:
#     storageClassName: "standard"
#     accessModes:
#     - ReadWriteOnce
#     resources:
#       requests:
#         storage: 1Gi
#   terminationPolicy: WipeOut

# ---
# apiVersion: kubedb.com/v1alpha2
# kind: Postgres
# metadata:
#   name: demo-pg
#   namespace: demo
# spec:
#   version: "13.2-debian"
#   replicas: 3
#   standbyMode: Hot
#   clientAuthMode: md5
#   storageType: Durable
#   podTemplate:
#     spec:
#       containerSecurityContext:
#         runAsUser: 10000
#         privileged: false
#   storage:
#     storageClassName: "standard"
#     accessModes:
#     - ReadWriteOnce
#     resources:
#       requests:
#         storage: 1Gi
#   terminationPolicy: WipeOut

apiVersion: v1
kind: Secret
metadata:
  name: inmemory-config
#  name: shard-config
  namespace: demo
data:
  mongod.conf: c3RvcmFnZToKICBpbk1lbW9yeToKICAgIGVuZ2luZUNvbmZpZzoKICAgICAgaW5NZW1vcnlTaXplR0I6IDAuNA==



#vpaInMemoryPercentMap: make(map[string]int64),
#// setting the vpas InMemoryPercentages here, so that we can reduce that percentage of memory from lister pods.
#//inMemoryGetter := in_memory.NewInMemoryRecommendationGetter(u.Client, []string{vpa.Name}, vpa.Namespace, []string{vpa.Spec.TargetRef.Name}, s.scalerDBMap[scaler])
#//percent, err := inMemoryGetter.GetInMemoryPercentage()
#//if err != nil {
#//	return nil, err
#//}
#//s.vpaInMemoryPercentMap[vpa.Name] = percent
#reducePodMemoryByPercentage(pod, s.vpaInMemoryPercentMap[controllingVPA.Vpa.Name])

# prints

#  //func printPods(pods []*core.Pod) {
#  //	for _, pod := range pods {
#  //		fmt.Printf("PRINTing %v", pod.Name)
#  //		for _, container := range pod.Spec.Containers {
#  //			fmt.Printf("container Name = %v ", container.Name)
#  //			for name, quantity := range container.Resources.Requests {
#  //				fmt.Printf("resourceName = %v, quantity = %v %v ", name, quantity.Value(), container.Resources.Limits[name])
#  //			}
#  //		}
#  //		fmt.Printf("\n")
#  //	}
#  //}

